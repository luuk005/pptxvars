name: release
on:
  workflow_dispatch:
    inputs:
      part:
        type: choice
        options: [keep, patch, minor, major]
        default: keep
      repo:
        type: choice
        options: [testpypi, pypi]
        default: testpypi

jobs:
  rel:
    runs-on: ubuntu-latest
    permissions: { contents: write }
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - name: Git identity
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - uses: astral-sh/setup-uv@v3

      - name: Bump version and commit
        if: inputs.part != 'keep'
        run: |
          uv version --bump "${{ inputs.part }}"
          git add pyproject.toml
          git commit -m "bump: ${{ inputs.part }}"
          git push

      - name: Build
        run: |
          uv sync --dev
          uv run python -m pip install -U build
          uv run python -m build

      - name: Publish (TestPyPI)
        if: inputs.repo == 'testpypi'
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_TOKEN }}
        run: |
          $VER = uv version | awk '{print $NF}'
          uvx twine check "dist/*$VER*"
          uvx twine upload --repository testpypi "dist/*$VER*" --verbose

      - name: Publish (PyPI)
        if: inputs.repo == 'pypi'
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          $VER = uv version | awk '{print $NF}'
          uvx twine check "dist/*$VER*"
          uvx twine upload "dist/*$VER*" --verbose
